name: java-programming-blog

services:
  database:
    image: postgres:15
    container_name: blog-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./data/sample_data.sql:/docker-entrypoint-initdb.d/01-sample_data.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: blog-backend
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SERVER_PORT: 8080
    volumes:
      - ./backend:/app
    depends_on:
      database:
        condition: service_healthy
    command: ["sh", "-c", "gradle --no-daemon bootRun"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health | grep -q 'UP'"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 25s
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    image: node:22-alpine
    container_name: blog-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      NODE_ENV: development
    volumes:
      - ./frontend:/app
    depends_on:
      backend:
        condition: service_healthy
    command: ["sh", "-c", "npm install --no-fund --no-audit && npm run dev"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000 >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 25s
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge


